These results have been generated with the following IK settings:


%% getting the values of default scapula coordinate 
% we get the values of the coordinates describing the scapula position from 
% the general model in default pose
scapula_abd = model.getJointSet().get(2).get_coordinates(0);
scapula_ele = model.getJointSet().get(2).get_coordinates(1);
scapula_urt = model.getJointSet().get(2).get_coordinates(2);
scapula_wng = model.getJointSet().get(2).get_coordinates(3);

default_sa = scapula_abd.get_default_value();
default_se = scapula_ele.get_default_value();
default_su = scapula_urt.get_default_value();
default_sw = scapula_wng.get_default_value();

%% performing IK
% perform IK on the basis of marker data to retrieve the motion file for
% the coordinates of the model

motion_file_name = append(experiment_name, '.mot');

ikSetupFile = [path_to_repo,'' ...
        '\Code\Scale Model\Utilities\setup_files\Standford2019_experiments\IKSetup_2019.xml'];

ikTool = InverseKinematicsTool(ikSetupFile);
ikTool.setMarkerDataFileName(trc_file);
ikTool.setOutputMotionFileName([path_to_repo, '\Personal_Results\', motion_file_name]);
ikTool.set_report_marker_locations(1);
ikTool.setStartTime(start_time);
ikTool.setEndTime(end_time);
ikTool.setModel(model_temp);

% set the reference values for the scapula coordinates (last 4 tasks)
num_IK_tasks = ikTool.getIKTaskSet.getSize();

% set the weight of each coordinate in the tracking tasks
ikTool.getIKTaskSet.get(num_IK_tasks-4).setWeight(weight_coord(1));
ikTool.getIKTaskSet.get(num_IK_tasks-3).setWeight(weight_coord(2));
ikTool.getIKTaskSet.get(num_IK_tasks-2).setWeight(weight_coord(3));
ikTool.getIKTaskSet.get(num_IK_tasks-1).setWeight(weight_coord(4));

% set also the values here
IKCoordinateTask.safeDownCast(ikTool.getIKTaskSet.get(num_IK_tasks-4)).setValue(default_sa);
IKCoordinateTask.safeDownCast(ikTool.getIKTaskSet.get(num_IK_tasks-3)).setValue(default_se);
IKCoordinateTask.safeDownCast(ikTool.getIKTaskSet.get(num_IK_tasks-2)).setValue(default_su);
IKCoordinateTask.safeDownCast(ikTool.getIKTaskSet.get(num_IK_tasks-1)).setValue(default_sw);
ikTool.print('SO_autogenerated_IK_setup.xml');

ikTool.run();